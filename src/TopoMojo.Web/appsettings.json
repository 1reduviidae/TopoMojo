/*
* This appsettings.json file will be overwritten by update packages.
* Only make changes to an environment-specific copy, such as
* appsettings.Production.json or appsettings.Development.json
*/
{
  "Account": {
    "Password": {
      "ComplexityExpression": "(?=^.{8,}$)(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[`~!@#$%^&*\\(\\)\\-_=+\\[\\]\\{\\}\\\\|;:'\",<\\.>/?\\t]).*$",
      "ComplexityText": "At least 8 characters containing uppercase and lowercase letters, numbers, and symbols",
      "History": 0,
      "Age": 0,
      "ResetTokenExpirationMinutes": 90
    },
    "Registration": {
      "AllowManual": false,
      "AllowedDomains": "cert.org sei.cmu.edu",
      "RequireConfirmation": true,
      "IssuerCertificatesPath": "Issuers",
      "CertificateSubjectIdRegex": "CN=\\S*(\\d{10})",
      "CertificateSubjectNameRegex": "CN=(\\S*)\\.\\d"
    },
    "Authentication": {
      "RequireCertificate": false,
      "CheckCertificateRevocation": false,
      "LockThreshold": 0,
      "AllowLocalLogin": true,
      "AllowRememberLogin": true,
      "RememberMeLoginDays": 30,
      "ShowLogoutPrompt": false,
      "AutomaticRedirectAfterSignout": true,
      "WindowsAuthentiationEnabled": false,
      "SigningCertificate": "server.pfx",
      "SigningCertificatePassword": "",
      "ProxiedCertificateHeader": "X-ARR-ClientCert",
      "ValidatedSubjectHeader": "X-Validated-Subject"
    },
    "Token": {
      "ExpirationMinutes": 60,
      "Scheme": "Bearer",
      "Key": "12aj;lskf j0yz;lva022",
      "Issuer": "topomojo",
      "Audience": "topomojo",
      "RequireHttpsMetadata": false
    }
  },

  /* Settings for the client application */
  "ClientSettings": {
    "branding": {
      "applicationName": "TopoMojo",
      "logoUrl": ""
    },

    /* available languages */
    "lang": "en",
    "maintenanceMessage": "",

    /* allowed auth methods */
    "login": {
      "allowLocalLogin": true,
      "allowExternalLogin": false
    },

    /* open-identity-connect settings for external auth */
    "oidc": {
      "name": "Sketch",
      "authority": "http://localhost:5000",
      "client_id": "topomojo",
      "redirect_uri": "http://localhost:5004/auth/oidc",
      "silent_redirect_uri": "http://localhost:5004/silent.html",
      "post_logout_redirect_uri": "http://localhost:5004",
      "response_type": "id_token token",
      "scope": "openid profile sketch-common",
      "automaticSilentRenew": false,
      "filterProtocolClaims": true,
      "loadUserInfo": false,
      "accessTokenExpiringNotificationTime": 120
    },

    /* api path the topomojo server*/
    "urls": {
      "apiUrl": "/api"
    }
  },

  "Control": {
    "ApplicationName": "TopoMojo",
    "ShowExceptionDetail": false
  },

  /* Limits */
  "Core": {
    /* How many gamespaces can a person have running at once? */
    "ConcurrentInstanceMaximum": 2,

    /* How many workspaces can a person create? */
    "DefaultWorkspaceLimit": 0,

    /* How many templates can a workspace hold? */
    "WorkspaceTemplateLimit": 3
  },

  "ConnectionStrings": {
    // "PostgreSQL": "Server=localhost;Database=identity",
    "Sqlite": "Data Source=topomojo.db",
    // "SqlServer": "Server=(localdb)\\mssqllocaldb;Database=TopomojoDB;Trusted_Connection=True;MultipleActiveResultSets=true"
  },

  /* Supported database providers: Sqlite */
  "Database": {
    "DevModeRecreate": false,
    "Provider": "Sqlite",
    "SeedTemplateKey": "seed-data.json"
  },

  /* Settings for file uploads */
  "FileUpload": {
    /* Path to public iso folder (corresponds to Pod:IsoStore */
    "IsoRoot": "misc/",
    /* Path to topology folders (corresponds to Pod:DiskStore) */
    "TopoRoot": "misc/",
    "MiscRoot": "misc/",
    "MaxFileBytes": 0
  },

  /* Settings for logging */
  "Logging": {
    "IncludeScopes": false,
    "LogLevel": {
      "Default": "Error"
    }
  },

  /* Settings for messaging (only used for local authentication) */
  "Messaging": {
    "Email": {
      "Host": "",
      "Port": 25,
      "User": "",
      "Password": "",
      "Sender": ""
    },
    "SMS": {
    }
  },

  /* Settings for validating access tokens from an external identity provider */
  "OpenIdConnect": {
    "Enabled": false,
    "Authority": "http://localhost:5000",
    "AuthorizationScope": "sketch-common",
    "RequireHttpsMetadata": false
  },

  /* Settings for interacting with hypervisor(s) */
  "Pod": {

    /* Url: https://vcenter.local or https://esxi[1-4].local (supports ranges)*/
    "Url": "",

    /* Credentials for topomojo at hypervisor(s) */
    "User": "",
    "Password": "",

    /* PoolPath: "datacenter/cluster/pool" (uses first-found for any empty segments */
    "PoolPath": "",

    /* Uplink: name of switch that bridges hosts (standard or distributed) */
    "Uplink": "vSwitch0",

    /* VmStore: datastore path of running vm's (support host macro... ie. "[local-{host}]") */
    "VmStore": "[ds] tm/run/",

    /* IsoStore: datastore path of public iso's */
    "IsoStore": "[ds] iso/",

    /* DiskStore: datastore path of topology folders and template disks */
    "DiskStore": "[ds] tm/",

    /* StockStore: datastore path of stock disks */
    "StockStore": "[ds] tm/stock/",

    /*
      TicketUrlHandler: console url transform method
        "none" // wss://<host>.<internal-domain>/ticket/
        "querystring" // wss://<displayurl>/ticket/123455?vmhost=<internalHost>
        "local-app" //transforms url to wss://<server-url>/<host>/ticket/
        "external-domain" // wss://<host>.<server-url>/ticket/
        "host-map" // wss://<mapped-host>/ticket/
    */
    "DisplayUrl": "",
    "TicketUrlHandler": "none",
    "TicketUrlHostMap": {
      // "int01.internal.local": "ext01.external.domain"
    },
    "Vlan": {
      /* range of vlan id's available to topomojo */
      "Range": "[200-399]",

      /* pre-existing networks available to topomojo vm's */
      "Reservations": [
        {
          "id": 3,
          "Name": "bridge-net"
        }
      ]
    }
  }
}
